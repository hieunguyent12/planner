/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SchedulesRouteImport } from './routes/schedules'
import { Route as PlansRouteImport } from './routes/plans'
import { Route as BuildRouteImport } from './routes/build'
import { Route as IndexRouteImport } from './routes/index'

const SchedulesRoute = SchedulesRouteImport.update({
  id: '/schedules',
  path: '/schedules',
  getParentRoute: () => rootRouteImport,
} as any)
const PlansRoute = PlansRouteImport.update({
  id: '/plans',
  path: '/plans',
  getParentRoute: () => rootRouteImport,
} as any)
const BuildRoute = BuildRouteImport.update({
  id: '/build',
  path: '/build',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/build': typeof BuildRoute
  '/plans': typeof PlansRoute
  '/schedules': typeof SchedulesRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/build': typeof BuildRoute
  '/plans': typeof PlansRoute
  '/schedules': typeof SchedulesRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/build': typeof BuildRoute
  '/plans': typeof PlansRoute
  '/schedules': typeof SchedulesRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/build' | '/plans' | '/schedules'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/build' | '/plans' | '/schedules'
  id: '__root__' | '/' | '/build' | '/plans' | '/schedules'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BuildRoute: typeof BuildRoute
  PlansRoute: typeof PlansRoute
  SchedulesRoute: typeof SchedulesRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/schedules': {
      id: '/schedules'
      path: '/schedules'
      fullPath: '/schedules'
      preLoaderRoute: typeof SchedulesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/plans': {
      id: '/plans'
      path: '/plans'
      fullPath: '/plans'
      preLoaderRoute: typeof PlansRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/build': {
      id: '/build'
      path: '/build'
      fullPath: '/build'
      preLoaderRoute: typeof BuildRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BuildRoute: BuildRoute,
  PlansRoute: PlansRoute,
  SchedulesRoute: SchedulesRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
